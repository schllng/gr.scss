@mixin gr-build-classes($features: ()) {

  // generate grid classes without media query definitions
  @if length($gr-breakpoints) == 0 {

    @include _gr-build-classes-without-breakpoints($features);
  } @else {

    @include _gr-build-classes($features);
  }
}

@mixin _gr-build-classes-without-breakpoints($features) {

  @if $gr-set-container-style {

    .#{$gr-namespace-class}-#{$gr-container-class} {

      @include _gr-container($gr-container-max-width, $gr-container-padding);
    }
  }

  .#{$gr-namespace-class}-#{$gr-row-class} {

    @include _gr-row-base;
    @include _gr-row($gr-gutter);
  }

  @include _gr-col-selector-all {

    @include _gr-col-base($gr-gutter);
  }

  @for $i from 1 to $gr-columns + 1 {

    .#{$gr-namespace-class}-#{$i} {

      @include _gr-col($i, $gr-columns);
    }
  }

  @include _gr-build-modifier-classes($features, $gr-columns);
}

@mixin _gr-build-classes($features) {

  @each $breakpoint, $breakpoint-config in $gr-breakpoints {

    @include _gr-media($breakpoint) {

      @if $gr-set-container-style {

        .#{$gr-namespace-class}-#{$gr-container-class},
        .#{$gr-namespace-class}-#{$gr-container-class}#{$gr-breakpoint-class-divider}#{$breakpoint} {

          $container-max-width: _gr-get-resp-val($breakpoint, container, max-width);
          $container-padding: _gr-get-resp-val($breakpoint, container, padding);

          @include _gr-container($container-max-width, $container-padding);
        }
      }

      .#{$gr-namespace-class}-#{$gr-row-class},
      .#{$gr-namespace-class}-#{$gr-row-class}#{$gr-breakpoint-class-divider}#{$breakpoint} {

        @include _gr-row-base;
        @include _gr-row(_gr-get-resp-val($breakpoint, gutter));
      }

      @include _gr-col-selector-all($breakpoint) {

        @include _gr-col-base(_gr-get-resp-val($breakpoint, gutter));
      }

      // seperate columns without breakpoint modifier
      // to override them by column classes with modifier
      @for $i from 1 to _gr-get-resp-val($breakpoint, columns) + 1 {

        .#{$gr-namespace-class}-#{$i} {

          @include _gr-col($i, _gr-get-resp-val($breakpoint, columns));
        }
      }

      @for $i from 1 to _gr-get-resp-val($breakpoint, columns) + 1 {

        .#{$gr-namespace-class}-#{$i}#{$gr-breakpoint-class-divider}#{$breakpoint} {

          @include _gr-col($i, _gr-get-resp-val($breakpoint, columns));
        }
      }

      @include _gr-build-modifier-classes($features, _gr-get-resp-val($breakpoint, columns), $breakpoint);
    }
  }
}


/// Generates selectors for all columns for the given breakpoint ([.gr-1, .gr-2..., ].gr-1@...) and sets styles for them
/// @param  {String|null}  $breakpoint       null   The breakpoint identifier for which the selector should be build
/// @param  {Boolean}      $only-breakpoint  false  Wheter classes without breakpoint should be added or not

@mixin _gr-col-selector-all($breakpoint: null, $only-breakpoint: false) {

  $_gr-classes: '';
  $column-count: if($breakpoint, _gr-get-resp-val($breakpoint, columns) + 1, $gr-columns + 1);

  @if not $only-breakpoint {

    @for $i from 1 to $column-count {

      @if $i == 1 {

        $_gr-classes: '.#{$gr-namespace-class}-#{$i}';
      } @else {

        $_gr-classes: $_gr-classes + ', ' + '.#{$gr-namespace-class}-#{$i}';
      }
    }
  }

  @if $breakpoint {

    @for $i from 1 to $column-count {

      @if $i == 1 and $only-breakpoint {

        $_gr-classes: '.#{$gr-namespace-class}-#{$i}#{$gr-breakpoint-class-divider}#{$breakpoint}';
      } @else {

        $_gr-classes: $_gr-classes + ', ' + '.#{$gr-namespace-class}-#{$i}#{$gr-breakpoint-class-divider}#{$breakpoint}';
      }
    }
  }

  #{$_gr-classes} {

    @content;
  }
}

/// Generates selectors for all row elements (.gr-row, .gr-row@...) and sets styles for them
@mixin _gr-row-selector-breakpoints() {

  $_gr-row-classes: '.#{$gr-namespace-class}-#{$gr-row-class}';

  @each $breakpoint, $breakpoint-config in $gr-breakpoints {

    $_gr-row-classes: $_gr-row-classes + ', ' + '.#{$gr-namespace-class}-#{$gr-row-class}#{$gr-breakpoint-class-divider}#{$breakpoint}';
  }

  .#{$gr-namespace-class}-#{$gr-row-class} {

    @content;
  }
}

/// Checks for activated modifiers and calls their build function
/// @param  {Map}          $features       Map of all supported modifiers and if they are active ({String}: {Boolean})
/// @param  {Number}       $columns        Column-count for modifiers to generate all necessary classes
/// @param  {String|null}  $breakpoint    null  The breakpoint identifier for which the modifiers should be build
@mixin _gr-build-modifier-classes($features, $columns, $breakpoint: null) {

  $set-no-gutter-classes: map-get($features, no-gutter);
  $set-row-full-classes: map-get($features, row-full);
  $set-row-reverse-classes: map-get($features, row-reverse);
  $set-row-column-classes: map-get($features, row-column);
  $set-row-column-reverse-classes: map-get($features, row-column-reverse);
  $set-align-classes: map-get($features, align);
  $set-order-classes: map-get($features, order);
  $set-hide-show-classes: map-get($features, hide-show);
  $set-prefix-classes: map-get($features, prefix);
  $set-suffix-classes: map-get($features, suffix);
  $set-push-classes: map-get($features, push);
  $set-pull-classes: map-get($features, pull);

  @if $set-prefix-classes or $set-suffix-classes {

    @include _gr-build-modifier-prefix-suffix-classes($columns, $set-prefix-classes, $set-suffix-classes, $breakpoint);
  }

  @if $set-push-classes or $set-pull-classes {

    @include _gr-build-modifier-push-pull-classes($columns, $set-push-classes, $set-pull-classes, $breakpoint);
  }

  @if $set-no-gutter-classes {

    @include _gr-build-modifier-no-gutter-classes($breakpoint);
  }

  @if $set-row-full-classes {

    @include _gr-build-modifier-row-full-classes($breakpoint);
  }

  @if $set-row-reverse-classes {

    @include _gr-build-modifier-row-reverse-classes($breakpoint);
  }

  @if $set-row-column-classes {

    @include _gr-build-modifier-row-column-classes($breakpoint);
  }

  @if $set-row-column-reverse-classes {

    @include _gr-build-modifier-row-column-reverse-classes($breakpoint);
  }

  @if $set-align-classes {

    @include _gr-build-modifier-align-classes($breakpoint);
  }

  @if $set-order-classes {

    @include _gr-build-modifier-order-classes($columns, $breakpoint);
  }

  @if $set-hide-show-classes {

    @include _gr-build-modifier-hide-show-classes($breakpoint);
  }
}
