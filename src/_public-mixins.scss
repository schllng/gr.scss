@mixin gr-build-classes($modifier: ()) {

  // generate grid classes without media query definitions
  @if length($_gr-states) == 0 {

    @include _gr-build-classes-without-states($modifier);
  } @else {

    @include _gr-build-classes($modifier);
  }
}

@mixin gr-row($state: null) {

  @if $state and length($_gr-states) > 0 {

    @include _gr-media($state) {

      @include _gr-row-base;
      @include _gr-row(_gr-get-resp-val($state, gutter));
    }
  } @elseif not $state and length($_gr-states) > 0 {

    @include _gr-row-base;

    @each $state, $state-config in $_gr-states {

      @include _gr-media($state) {

        @include _gr-row(_gr-get-resp-val($state, gutter));
      }
    }
  } @else {

    @include _gr-row-base;
    @include _gr-row($gr-gutter);
  }
}

@mixin gr-col($width, $state: null) {

  @if $state and length($_gr-states) > 0 {

    @include _gr-media($state) {

      @include _gr-col-base(_gr-get-resp-val($state, gutter));
      @include _gr-col($width, _gr-get-resp-val($state, columns));
    }
  } @elseif not $state and length($_gr-states) > 0 {

    @each $state, $state-config in $_gr-states {

      @include _gr-media($state) {

        @include _gr-col-base(_gr-get-resp-val($state, gutter));
        @include _gr-col($width, _gr-get-resp-val($state, columns));
      }
    }
  } @else {

    @include _gr-col-base($gr-gutter);
    @include _gr-col($width, $gr-columns);
  }
}

@mixin gr-container($state: null) {

  @if $state and length($_gr-states) > 0 {

    @include _gr-media($state) {

      $container-max-width: _gr-get-resp-val($state, container, max-width);
      $container-padding: _gr-get-resp-val($state, container, padding);

      @include _gr-container($container-max-width, $container-padding);
    }
  } @elseif not $state and length($_gr-states) > 0 {

    @each $state, $state-config in $_gr-states {

      @include _gr-media($state) {

        $container-max-width: _gr-get-resp-val($state, container, max-width);
        $container-padding: _gr-get-resp-val($state, container, padding);

        @include _gr-container($container-max-width, $container-padding);
      }
    }
  } @else {

    @include _gr-container($gr-grid-max-width, $gr-container-padding);
  }
}


// // ===========================
// // MODIFIERS
// // ===========================
//
// @mixin gr-push($width, $state: null) {}
// @mixin gr-pull($width, $state: null) {}
// @mixin gr-prefix($width, $state: null) {}
// @mixin gr-suffix($width, $state: null) {}
// @mixin gr-row-reverse() {}
// @mixin gr-hide() {}
// @mixin gr-show() {}
// @mixin gr-first() {}
// @mixin gr-last() {}
// @mixin gr-align() {}
